name: Commit Stage
on: push

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read # 현재 깃 저장소를 체크아웃할 수 있는 권한을 부여
      security-events: write # 깃허브에 보안 이벤트를 제출할 수 있는 권한을 부여
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3 # 현재 깃 저장소를 체크아웃
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Code vulnerability scan
        uses: anchore/scan-action@v3
        id: scan # 현재 단계의 식별자를 할당, 이후단계에서 참고할 수 있음
        with:
          path: "${{ github.workspace }}" # 체크아웃 저장소 패스
          fail-build: false # 취약점이 발견되어도 빌드 실패로 처리하지 않음
          severity-cutoff: high # 취약점 중 critical, high 등급만 리포트
          acs-report-enable: true # 취약점 리포트 생성

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2 # 깃허브로 보안 취약성 리포트(SARIF 형식)를 업로드
        if: success() || failure() # 이전단계가 실패하더라도 리포트 전송
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }} # 이전 단계 결과의 리포트를 가져온다

      - name: Build , unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew build